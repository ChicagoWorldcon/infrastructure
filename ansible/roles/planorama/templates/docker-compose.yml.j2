version: '3.7'
services:
  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis-data:/data

  web:
    entrypoint: "script/planorama_start.sh"
    image: {{ planorama_ecr_registry }}:${PLANORAMA_DOCKER_TAG}
    ports:
      - "{{ planorama_public_port }}:443"
      - "127.0.0.1:{{ planorama_insecure_public_port}}:3000"
    volumes:
      - type: tmpfs
        target: /app/tmp
{% for vol in _planorama_docker_volumes %}
      - {{ vol }}
{% endfor %}
{% if _planorama_environment_vars %}
    environment:
      - RAILS_ENV=production
      - NODE_ENV=production
{% for k, v in _planorama_environment_vars.items() %}
      - {{ k }}={{ v }}
{% endfor %}
{% endif %}
    env_file:
      - "{{ chicon_home }}/etc/hostname.env"
      - "{{ chicon_home }}/etc/{{ app_name }}.env"
      - "{{ chicon_home }}/etc/{{ app_name }}-overrides.env"
      - "{{ chicon_home }}/etc/creds.env"
    depends_on:
      - redis
    links:
      - redis
    restart: always

  planorama-sidekiq:
    entrypoint: "script/docker_sidekiq_entry.sh"
    image: {{ planorama_ecr_registry }}:${PLANORAMA_DOCKER_TAG}
    volumes:
      - type: tmpfs
        target: /app/tmp
{% for vol in _planorama_docker_volumes %}
      - {{ vol }}
{% endfor %}
{% if _planorama_environment_vars %}
    environment:
      - RAILS_ENV=production
      - NODE_ENV=production
{% for k, v in _planorama_environment_vars.items() %}
      - {{ k }}={{ v }}
{% endfor %}
{% endif %}
    env_file:
      - "{{ chicon_home }}/etc/hostname.env"
      - "{{ chicon_home }}/etc/{{ app_name }}.env"
      - "{{ chicon_home }}/etc/{{ app_name }}-overrides.env"
      - "{{ chicon_home }}/etc/creds.env"
    depends_on:
      - redis
    links:
      - redis
    restart: always

volumes:
  redis-data:
