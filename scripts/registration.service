[Unit]
Description=Registration API service
Requires=docker.service
Requires=letsencrypt.timer
After=docker.service

[Service]
Restart=always

WorkingDirectory=/opt/registration/registration-api
Environment=DB_HOSTNAME=${db_hostname}
Environment=DB_NAME=${db_name}
Environment=REGISTRATION_API_DOMAIN_NAME=${registration_api_domain_name}
Environment=REGISTRATION_WWW_DOMAIN_NAME=${registration_www_domain_name}
Environment=JWT_SECRET=${jwt_secret}
Environment=SESSION_SECRET=${session_secret}
Environment=HUGO_PG_PASSWORD=${hugo_pg_password}
Environment=KANSA_PG_PASSWORD=${kansa_pg_password}
Environment=RAAMI_PG_PASSWORD=${raami_pg_password}
Environment=STRIPE_SECRET_API_KEY=${stripe_secret_api_key}
Environment=SENDGRID_API_KEY=${sendgrid_api_key}

User=ec2-user

# Remove old containers, images and volumes
ExecStartPre=/usr/local/bin/docker-compose -f docker-compose.yml -f docker-compose.aws.yml down -v
ExecStartPre=/usr/local/bin/docker-compose -f docker-compose.yml -f docker-compose.aws.yml rm -fv
ExecStartPre=-/bin/bash -c 'docker volume ls -qf "name=registrationapi_" | xargs docker volume rm'
ExecStartPre=-/bin/bash -c 'docker network ls -qf "name=registrationapi_" | xargs docker network rm'
ExecStartPre=-/bin/bash -c 'docker ps -aqf "name=registrationapi_*" | xargs docker rm'

# Compose up
ExecStart=/usr/local/bin/docker-compose -f docker-compose.yml -f docker-compose.aws.yml up

# Compose down, remove containers and volumes
ExecStop=/usr/local/bin/docker-compose -f docker-compose.yml -f docker-compose.aws.yml down -v

[Install]
WantedBy=multi-user.target